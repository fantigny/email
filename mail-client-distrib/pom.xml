<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>mail-client-distrib</artifactId>
	<packaging>pom</packaging>
	<description>cross-platform e-mail client</description>

	<pluginRepositories>
		<pluginRepository>
			<id>oss.sonatype</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<app.name>FisherMail</app.name>
		<app.name.lowercase>fishermail</app.name.lowercase>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<ISCC.location>src/deploy/win/innosetup_6.0.3-mini/ISCC.exe</ISCC.location>
		<ISCC.arg>/Qp</ISCC.arg>
	</properties>
	<parent>
		<groupId>net.anfoya</groupId>
		<artifactId>mail-client-pom</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<ISCC.exe>${ISCC.location}</ISCC.exe>
				<ISCC.exe.arg></ISCC.exe.arg>
				<KEYSTORE_PATH>/users/frede/documents/speederpan.com</KEYSTORE_PATH>
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<ISCC.exe>wine</ISCC.exe>
				<ISCC.exe.arg>${ISCC.location}</ISCC.exe.arg>
				<KEYSTORE_PATH>/home/wine/speederpan.com</KEYSTORE_PATH>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>net.anfoya</groupId>
			<artifactId>mail-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- compiling Java 8 for now -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- build self contained executable jar -->
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputFile>target/${app.name}.jar</outputFile>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<main-class>net.anfoya.mail.client.javafx.entrypoint.MailClient</main-class>
							</manifestEntries>
						</transformer>
					</transformers>
				</configuration>
			</plugin>

			<!-- sign jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>sign</id>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${sign.skip}</skip>

					<archiveDirectory>${project.build.directory}</archiveDirectory>
					<includes>
						<include>${app.name}.jar</include>
					</includes>

					<keystore>${KEYSTORE_PATH}/speederpan.com.jks</keystore>
					<alias>speederpan.com</alias>
					<storepass>speederpan.com</storepass>
					<keypass></keypass>
				</configuration>
			</plugin>

			<!-- build windows executable(x86,x64) from self contained jar -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.7.25</version>
				<executions>
					<execution>
						<phase>${assembly.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>launch4j</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${assembly.skipAssembly}</skip> <!-- doesn't work, need hack -->

					<headerType>gui</headerType>
					<jar>target/${app.name}.jar</jar>
					<outfile>target/${app.name}.exe</outfile>
					<errTitle>${app.name} Error</errTitle>
					<classPath>
						<mainClass>net.anfoya.mail.client.javafx.entrypoint.MailClient</mainClass>
					</classPath>
					<icon>../mail-common/src/main/resources/net/anfoya/mail/img/Mail.ico</icon>
					<jre>
						<path>jre</path>
						<minVersion>1.8.0</minVersion>
						<initialHeapSize>128</initialHeapSize>
						<maxHeapSize>1024</maxHeapSize>
					</jre>
					<versionInfo>
						<fileVersion>1.0.0.0</fileVersion>
						<txtFileVersion>1.0.0.0</txtFileVersion>
						<fileDescription>${app.name}</fileDescription>
						<copyright>speederpan.com</copyright>
						<productVersion>1.0.0.0</productVersion>
						<txtProductVersion>1.0.0.0</txtProductVersion>
						<productName>${app.name}</productName>
						<internalName>${app.name}</internalName>
						<originalFilename>${app.name}.exe</originalFilename>
					</versionInfo>
				</configuration>
			</plugin>

			<!-- sign exe -->
			<plugin>
				<groupId>net.jsign</groupId>
				<artifactId>jsign-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<skip>${sign.skip}</skip> <!-- doesn't work, need hack -->

					<file>target/${app.name}.exe</file>
					<name>${app.name}</name>
					<url>https://speederpan.com</url>

					<keystore>${KEYSTORE_PATH}/speederpan.com.jks</keystore>
					<alias>speederpan.com</alias>
					<storepass>speederpan.com</storepass>
				</configuration>
				<executions>
					<execution>
						<id>sign-exe</id>
						<phase>${sign.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- build win installers(x86,x64) from windows exe -->
			<!-- ..requires wine on linux -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>

					<mainClass>de.audi.analysis.main.Main</mainClass>
					<executable>
						${ISCC.exe}
					</executable>
				</configuration>
				<executions>
					<execution>
						<id>win32</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<arguments>
								<argument>${ISCC.exe.arg}</argument>
								<argument>${ISCC.arg}</argument>
								<argument>innosetup-win32.iss</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>win64</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<arguments>
								<argument>${ISCC.exe.arg}</argument>
								<argument>${ISCC.arg}</argument>
								<argument>innosetup-win64.iss</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- sign exe -->
			<plugin>
				<groupId>net.jsign</groupId>
				<artifactId>jsign-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<skip>${sign.skip}</skip> <!-- doesn't work, need hack -->

					<name>${app.name}</name>
					<url>https://speederpan.com</url>

					<keystore>${KEYSTORE_PATH}/speederpan.com.jks</keystore>
					<alias>speederpan.com</alias>
					<storepass>speederpan.com</storepass>
				</configuration>
				<executions>
					<execution>
						<id>sign-exe</id>
						<phase>${sign.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<file>target/${app.name}.exe</file>
						</configuration>
					</execution>
					<execution>
						<id>sign-install64</id>
						<phase>${sign.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<file>target/${app.name}-win64.exe</file>
						</configuration>
					</execution>
					<execution>
						<id>sign-install32</id>
						<phase>${sign.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<file>target/${app.name}-win32.exe</file>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- build macOs App(x64) from self contained jar -->
			<!-- ..only works on *nix systems -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<dependencies>
					<dependency>
						<groupId>com.panayotis</groupId>
						<artifactId>appbundler</artifactId>
						<version>1.0.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>macAppBundle</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>

					<target>
						<taskdef name="bundleapp"
							classname="com.oracle.appbundler.AppBundlerTask"
							classpathref="maven.plugin.classpath" />
						<bundleapp outputdirectory="target" name="${app.name}"
							displayname="${app.name}"
							icon="../mail-common/src/main/resources/net/anfoya/mail/img/Mail.icns"
							identifier="net.anfoya.mail-client" shortversion="2.0"
							copyright="speederpan.com"
							mainclassname="net.anfoya.mail.client.javafx.entrypoint.MailClient">
							<classpath file="target/${app.name}.jar" />
							<option value="-Xmx1g" />
							<runtime
								dir="src/deploy/macOs/jdk1.8.0_162.jdk/Contents/Home" />
						</bundleapp>
					</target>
				</configuration>
			</plugin>

			<!-- prepare java runtime for linux -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>truezip-maven-plugin</artifactId>
				<version>1.2</version>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>
				</configuration>
				<executions>
					<execution>
						<id>unzip-lin64</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<fileset>
								<directory>src/deploy/linux/lin64.zip</directory>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</fileset>
						</configuration>
					</execution>
					<execution>
						<id>unzip-lin32</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<fileset>
								<directory>src/deploy/linux/lin32.zip</directory>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- build deb packages(x86,x64) from self contained jar -->
			<plugin>
				<artifactId>jdeb</artifactId>
				<groupId>org.vafer</groupId>
				<version>1.8</version>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>
					<skipPOMs>false</skipPOMs>

					<controlDir>${project.basedir}/src/deploy/linux/deb</controlDir>
					<installDir>/opt/${app.name}</installDir>
				</configuration>
				<executions>
					<execution>
						<id>deb64</id>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<deb>${project.build.directory}/${app.name}-lin64.deb</deb>
							<dataSet>
								<data>
									<type>file</type>
									<src>${project.build.directory}/${app.name}.jar</src>
									<dst>/opt/${app.name}/${app.name}.jar</dst>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/../mail-common/src/main/resources/net/anfoya/mail/img/Mail64.png</src>
									<dst>/opt/${app.name}/${app.name}64.png</dst>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/launcher/${app.name}.desktop</src>
									<dst>/usr/share/applications/${app.name}.desktop</dst>
								</data>
								<data>
									<type>directory</type>
									<src>${project.build.directory}/lin64/jre1.8.0_231</src>
									<mapper>
										<type>perm</type>
										<prefix>/opt/${app.name}/openjdk</prefix>
									</mapper>
									<excludes>**/java</excludes>
								</data>
								<data>
									<type>file</type>
									<src>${project.build.directory}/lin64/jre1.8.0_231/bin/java</src>
									<dst>/opt/${app.name}/openjdk/bin/java</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/launcher/${app.name.lowercase}</src>
									<dst>/usr/bin/${app.name.lowercase}</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/bash/${app.name}.sh</src>
									<dst>/opt/${app.name}/${app.name}.sh</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
					<execution>
						<id>deb32</id>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<deb>${project.build.directory}/${app.name}-lin32.deb</deb>
							<dataSet>
								<data>
									<type>file</type>
									<src>${project.build.directory}/${app.name}.jar</src>
									<dst>/opt/${app.name}/${app.name}.jar</dst>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/../mail-common/src/main/resources/net/anfoya/mail/img/Mail64.png</src>
									<dst>/opt/${app.name}/${app.name}64.png</dst>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/launcher/${app.name}.desktop</src>
									<dst>/usr/share/applications/${app.name}.desktop</dst>
								</data>
								<data>
									<type>directory</type>
									<src>${project.build.directory}/lin32/jre1.8.0_231</src>
									<mapper>
										<type>perm</type>
										<prefix>/opt/${app.name}/openjdk</prefix>
									</mapper>
									<excludes>**/java</excludes>
								</data>
								<data>
									<type>file</type>
									<src>${project.build.directory}/lin32/jre1.8.0_231/bin/java</src>
									<dst>/opt/${app.name}/openjdk/bin/java</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/launcher/${app.name.lowercase}</src>
									<dst>/usr/bin/${app.name.lowercase}</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
								<data>
									<type>file</type>
									<src>${project.basedir}/src/deploy/linux/bash/${app.name}.sh</src>
									<dst>/opt/${app.name}/${app.name}.sh</dst>
									<mapper>
										<type>perm</type>
										<filemode>755</filemode>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- build rpm packages(x86,x64) from self contained jar -->
			<plugin>
				<groupId>de.dentrassi.maven</groupId>
				<artifactId>rpm</artifactId>
				<version>1.4.0</version>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>

					<attach>true</attach>
					<group>Application/Misc</group>
					<release>1.0.0</release>
					<forceRelease>true</forceRelease>
					<snapshotBuildId>1</snapshotBuildId>
					<signature>
						<skip>true</skip>
					</signature>
				</configuration>
				<executions>
					<execution>
						<id>rpm64</id>
						<phase>package</phase>
						<goals>
							<goal>rpm</goal>
						</goals>
						<configuration>
							<architecture>x86_64</architecture>
							<entries>
								<entry>
									<directory>true</directory>
									<name>/opt/${app.name}</name>
								</entry>
								<entry>
									<file>target/${app.name}.jar</file>
									<name>/opt/${app.name}/${app.name}.jar</name>
								</entry>
								<entry>
									<file>../mail-common/src/main/resources/net/anfoya/mail/img/Mail64.png</file>
									<name>/opt/${app.name}/${app.name}64.png</name>
								</entry>
								<entry>
									<file>src/deploy/linux/launcher/${app.name}.desktop</file>
									<name>/usr/share/applications/${app.name}.desktop</name>
								</entry>
								<entry>
									<collect>
										<from>target/lin64/jre1.8.0_231</from>
										<excludes>
											<exclude>**/java</exclude>
										</excludes>
									</collect>
									<name>/opt/${app.name}/openjdk</name>
								</entry>
								<entry>
									<file>target/lin64/jre1.8.0_231/bin/java</file>
									<name>/opt/${app.name}/openjdk/bin/java</name>
									<mode>755</mode>
								</entry>
								<entry>
									<file>src/deploy/linux/launcher/${app.name.lowercase}</file>
									<name>/usr/bin/${app.name.lowercase}</name>
									<mode>755</mode>
								</entry>
								<entry>
									<file>src/deploy/linux/bash/${app.name}.sh</file>
									<name>/opt/${app.name}/${app.name}.sh</name>
									<mode>755</mode>
								</entry>
							</entries>
						</configuration>
					</execution>
					<execution>
						<id>rpm32</id>
						<phase>package</phase>
						<goals>
							<goal>rpm</goal>
						</goals>
						<configuration>
							<architecture>i386</architecture>
							<entries>
								<entry>
									<directory>true</directory>
									<name>/opt/${app.name}</name>
								</entry>
								<entry>
									<file>target/${app.name}.jar</file>
									<name>/opt/${app.name}/${app.name}.jar</name>
								</entry>
								<entry>
									<file>../mail-common/src/main/resources/net/anfoya/mail/img/Mail64.png</file>
									<name>/opt/${app.name}/${app.name}64.png</name>
								</entry>
								<entry>
									<file>src/deploy/linux/launcher/${app.name}.desktop</file>
									<name>/usr/share/applications/${app.name}.desktop</name>
								</entry>
								<entry>
									<collect>
										<from>target/lin32/jre1.8.0_231</from>
										<excludes>
											<exclude>**/java</exclude>
										</excludes>
									</collect>
									<name>/opt/${app.name}/openjdk</name>
								</entry>
								<entry>
									<file>target/lin32/jre1.8.0_231/bin/java</file>
									<name>/opt/${app.name}/openjdk/bin/java</name>
									<mode>755</mode>
								</entry>
								<entry>
									<name>/usr/bin/${app.name.lowercase}</name>
									<file>src/deploy/linux/launcher/${app.name.lowercase}</file>
									<mode>755</mode>
								</entry>
								<entry>
									<name>/opt/${app.name}/${app.name}.sh</name>
									<file>src/deploy/linux/bash/${app.name}.sh</file>
									<mode>755</mode>
								</entry>
							</entries>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- zip portable packages and move all to distrib -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>build-portable-packages</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${app.name}</finalName>
							<attach>false</attach>
							<descriptors>
								<descriptor>src/assembly/assembly-macos.xml</descriptor>
								<descriptor>src/assembly/assembly-win32.xml</descriptor>
								<descriptor>src/assembly/assembly-win64.xml</descriptor>
								<descriptor>src/assembly/assembly-lin32.xml</descriptor>
								<descriptor>src/assembly/assembly-lin64.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>move-to-distrib</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>distrib</finalName>
							<outputDirectory>${project.basedir}</outputDirectory>
							<appendAssemblyId>false</appendAssemblyId>
							<attach>false</attach>
							<descriptors>
								<descriptor>src/assembly/assembly-distrib.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
