<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.anfoya</groupId>
		<artifactId>mail-client-pom</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>mail-client-distrib</artifactId>
	<packaging>jar</packaging>

	<properties>
		<app.name>FisherMail</app.name>
		<app.name.lowercase>fishermail</app.name.lowercase>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<ISCC.location>src/deploy/win/iss/innosetup_6.0.3-mini/ISCC.exe</ISCC.location>
		<ISCC.arg>/Qp</ISCC.arg>
	</properties>

	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<ISCC.exe>${ISCC.location}</ISCC.exe>
				<ISCC.exe.arg></ISCC.exe.arg>
				<KEYSTORE_PATH>/users/frede/documents/speederpan.com</KEYSTORE_PATH>
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<ISCC.exe>wine</ISCC.exe>
				<ISCC.exe.arg>${ISCC.location}</ISCC.exe.arg>
				<KEYSTORE_PATH>/home/wine/speederpan.com</KEYSTORE_PATH>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>net.anfoya</groupId>
			<artifactId>mail-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- build self contained executable jar -->
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputFile>${project.build.directory}/${app.name}.jar</outputFile>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<manifestEntries>
								<main-class>net.anfoya.mail.client.javafx.entrypoint.MailClient</main-class>
							</manifestEntries>
						</transformer>
					</transformers>
				</configuration>
			</plugin>

			<!-- sign jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${sign.skip}</skip>

					<archive>${project.build.directory}/${app.name}.jar</archive>

					<keystore>${KEYSTORE_PATH}/speederpan.com.jks</keystore>
					<alias>speederpan.com</alias>
					<storepass>speederpan.com</storepass>
					<keypass></keypass>
				</configuration>
			</plugin>

			<!-- build windows executable(x86,x64) from self contained jar -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.7.25</version>
				<executions>
					<execution>
						<phase>${assembly.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>launch4j</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${assembly.skipAssembly}</skip> <!-- doesn't work, need hack -->

					<headerType>gui</headerType>
					<jar>${project.build.directory}/${app.name}.jar</jar>
					<outfile>${project.build.directory}/${app.name}.exe</outfile>
					<errTitle>${app.name} Error</errTitle>
					<classPath>
						<mainClass>net.anfoya.mail.client.javafx.entrypoint.MailClient</mainClass>
					</classPath>
					<icon>../mail-common/src/main/resources/net/anfoya/mail/img/Mail.ico</icon>
					<jre>
						<path>jre</path>
						<minVersion>1.11.0</minVersion>
						<initialHeapSize>128</initialHeapSize>
						<maxHeapSize>1024</maxHeapSize>
					</jre>
					<versionInfo>
						<fileVersion>1.0.0.0</fileVersion>
						<txtFileVersion>1.0.0.0</txtFileVersion>
						<fileDescription>${app.name}</fileDescription>
						<copyright>speederpan.com</copyright>
						<productVersion>1.0.0.0</productVersion>
						<txtProductVersion>1.0.0.0</txtProductVersion>
						<productName>${app.name}</productName>
						<internalName>${app.name}</internalName>
						<originalFilename>${app.name}.exe</originalFilename>
					</versionInfo>
				</configuration>
			</plugin>

			<!-- sign exe -->
			<plugin>
				<groupId>net.jsign</groupId>
				<artifactId>jsign-maven-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>sign-exe</id>
						<phase>${sign.skipPhaseHack}</phase> <!-- hack to skip execution during continuous building -->
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${sign.skip}</skip> <!-- doesn't work, need hack -->

					<file>${project.build.directory}/${app.name}.exe</file>
					<name>${app.name}</name>
					<url>https://speederpan.com</url>

					<keystore>${KEYSTORE_PATH}/speederpan.com.jks</keystore>
					<alias>speederpan.com</alias>
					<storepass>speederpan.com</storepass>
				</configuration>
			</plugin>

			<!-- prepare openJdk -->
			<plugin>
				<groupId>com.igormaznitsa</groupId>
				<artifactId>mvn-jlink-wrapper</artifactId>
				<version>1.0.5</version>
				<executions>
					<execution>
						<id>jre.win64</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<jdkPathProperty>jre.win64</jdkPathProperty>
							<jdkCachePath>${project.build.directory}/jreCache</jdkCachePath>
							<provider>BELLSOFT</provider>
							<providerConfig>
								<version>11.0.5+11</version>
								<os>windows</os>
								<arch>amd64</arch>
								<type>jre</type>
								<ext>zip</ext>
							</providerConfig>
						</configuration>
					</execution>
					<execution>
						<id>jre.win32</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<jdkPathProperty>jre.win32</jdkPathProperty>
							<jdkCachePath>${project.build.directory}/jreCache</jdkCachePath>
							<provider>BELLSOFT</provider>
							<providerConfig>
								<version>11.0.5+11</version>
								<os>windows</os>
								<arch>i586</arch>
								<type>jre</type>
								<ext>zip</ext>
							</providerConfig>
						</configuration>
					</execution>
					<execution>
						<id>jre.lin64</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<jdkPathProperty>jre.lin64</jdkPathProperty>
							<jdkCachePath>${project.build.directory}/jreCache</jdkCachePath>
							<provider>BELLSOFT</provider>
							<providerConfig>
								<version>11.0.5+11</version>
								<os>linux</os>
								<arch>amd64</arch>
								<type>jre</type>
								<ext>zip</ext>
							</providerConfig>
						</configuration>
					</execution>
					<execution>
						<id>jre.lin32</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<jdkPathProperty>jre.lin32</jdkPathProperty>
							<jdkCachePath>${project.build.directory}/jreCache</jdkCachePath>
							<provider>BELLSOFT</provider>
							<providerConfig>
								<version>11.0.5+11</version>
								<os>linux</os>
								<arch>i586</arch>
								<type>jre</type>
								<ext>zip</ext>
							</providerConfig>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- build win installers(x86,x64) from windows exe -->
			<!-- ..requires wine on linux (winehq.org) -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-iss</id>
            			<phase>package</phase>
            			<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target</outputDirectory>
							<resources>
								<resource>
									<directory>src/deploy/win/iss</directory>
									<includes>
										<include>innosetup-win*.iss</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<skip>${assembly.skipAssembly}</skip>

					<mainClass>de.audi.analysis.main.Main</mainClass>
					<executable>
						${ISCC.exe}
					</executable>
				</configuration>
				<executions>
					<execution>
						<id>win32</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<arguments>
								<argument>${ISCC.exe.arg}</argument>
								<argument>${ISCC.arg}</argument>
								<argument>target/innosetup-win32.iss</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>win64</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<arguments>
								<argument>${ISCC.exe.arg}</argument>
								<argument>${ISCC.arg}</argument>
								<argument>target/innosetup-win64.iss</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- zip portable packages -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>build-portable-packages</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${app.name}</finalName>
							<attach>false</attach>
							<descriptors>
								<descriptor>src/assembly/assembly-win64.xml</descriptor>
								<descriptor>src/assembly/assembly-win32.xml</descriptor>
								<descriptor>src/assembly/assembly-lin64.xml</descriptor>
								<descriptor>src/assembly/assembly-lin32.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>